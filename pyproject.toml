[project]
name = "burger-api"
version = "0.4.0-dev0"
description = "Backend implementation for Stellar Burgers web-app"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aio-pika>=9.5.5",
    "aiosqlite>=0.21.0",
    "alembic>=1.15.2",
    "asyncpg>=0.30.0",
    "bcrypt>=4.3.0",
    "fastapi[standard]>=0.115.12",
    "psycopg[binary]>=3.2.6",
    "pydantic-settings>=2.8.1",
    "pyjwt>=2.10.1",
    "sqlalchemy[asyncio]>=2.0.40",
    "sqlmodel>=0.0.24",
    "websockets>=15.0.1",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "snapshottest",
    "ruff>=0.11.6",
    "bump-my-version>=1.1.2",
    "plotly>=6.0.1",
    "numpy>=2.2.5",
    "pandas>=2.2.3",
    "locust>=2.36.2",
    "pandas-stubs>=2.2.3.250308",
    "httpx-ws>=0.7.2",
]

[tool.mypy]
mypy_path = "./stubs/"
plugins = ["pydantic.mypy"]
exclude = ["postgres-data"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.uv.sources]
snapshottest = { git = "https://github.com/syrusakbary/snapshottest.git" }

[tool.pytest.ini_options]
markers = [
    "now: sets datetime value for util function in db.utils",
]
testpaths = [
    "tests",
]

[tool.bumpversion]
current_version = "0.4.0-dev0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.bumpversion.parts.pre_l]
values = ["dev", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "compose.yaml"

[[tool.bumpversion.files]]
filename = "uv.lock"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
